(function () { var a; a = "undefined" != typeof exports && null !== exports ? exports : this, a.docSliderTouch_Controller = function () { function a(a, b, c, d) { this.stability = null == a ? 8 : Math.abs(a), this.sensitivity = null == b ? 100 : 1 + Math.abs(b), this.tolerance = null == c ? 1.1 : 1 + Math.abs(c), this.delay = null == d ? 150 : d, this.lastUpDeltas = function () { var a, b, c; for (c = [], a = 1, b = 2 * this.stability; 1 <= b ? a <= b : a >= b; 1 <= b ? a++ : a--)c.push(null); return c }.call(this), this.lastDownDeltas = function () { var a, b, c; for (c = [], a = 1, b = 2 * this.stability; 1 <= b ? a <= b : a >= b; 1 <= b ? a++ : a--)c.push(null); return c }.call(this), this.deltasTimestamp = function () { var a, b, c; for (c = [], a = 1, b = 2 * this.stability; 1 <= b ? a <= b : a >= b; 1 <= b ? a++ : a--)c.push(null); return c }.call(this) } return a.prototype.check = function (a) { var b; return a = a.originalEvent || a, null == a.wheelDelta ? null == a.deltaY ? (null != a.detail || 0 === a.detail) && (b = -40 * a.detail) : b = -40 * a.deltaY : b = a.wheelDelta, this.deltasTimestamp.push(Date.now()), this.deltasTimestamp.shift(), 0 < b ? (this.lastUpDeltas.push(b), this.lastUpDeltas.shift(), this.isInertia(1)) : (this.lastDownDeltas.push(b), this.lastDownDeltas.shift(), this.isInertia(-1)) }, a.prototype.isInertia = function (a) { var b, c, d, e, f, g, h; return (b = -1 === a ? this.lastDownDeltas : this.lastUpDeltas, null === b[0]) ? a : !(this.deltasTimestamp[2 * this.stability - 2] + this.delay > Date.now() && b[0] === b[2 * this.stability - 1]) && (d = b.slice(0, this.stability), c = b.slice(this.stability, 2 * this.stability), h = d.reduce(function (a, b) { return a + b }), f = c.reduce(function (a, b) { return a + b }), g = h / d.length, e = f / c.length, !!(Math.abs(g) < Math.abs(e * this.tolerance) && this.sensitivity < Math.abs(e)) && a) }, a.prototype.showLastUpDeltas = function () { return this.lastUpDeltas }, a.prototype.showLastDownDeltas = function () { return this.lastDownDeltas }, a }() }).call(this); const docSliderTouch = function () { let a, b, c = {}; const d = { speed: 600, easing: "ease", pager: !0, horizontal: !1, startSpeed: null, scrollReset: !1, lethargyOptions: [5, 80], complete: function () { }, beforeChange: function () { }, afterChange: function () { }, setInitCss: function (a, b) { const c = b ? "left" : "top", d = {}; return d[c] = 100 * a + "%", d }, setChangeCss: function (a, b, c, d, e) { const f = e ? "X" : "Y", g = {}; return g.transitionProperty = "transform", g.transitionDuration = c + "ms", g.transitionTimingFunction = d, g.transform = "translate" + f + "(-" + 100 * b + "%)", g } }, e = { setOptions: function (a) { if (void 0 !== a) { const b = Object.keys(a); for (let c = 0; c < b.length; c++) { const e = b[c]; d[e] = a[e] } d.pager || (f.updatePager = function () { }) } }, createInner: function () { const a = document.querySelector(".docSliderTouch"), b = document.createElement("div"), c = document.querySelectorAll(".docSliderTouch > *:not(.docSliderTouch-pager)"); b.classList.add("docSliderTouch-inner"); for (let a = 0; a < c.length; a++) { const e = c[a], f = d.setInitCss(a, d.horizontal); for (let a = 0; a < Object.keys(f).length; a++) { const b = Object.keys(f)[a]; e.style[b] = f[b] } e.classList.add("docSliderTouch-page"), e.classList.add("docSliderTouch-scroll"), e.setAttribute("data-ds-index", a.toString()), e.setAttribute("tabindex", "0"), b.appendChild(e) } a.appendChild(b) }, createPager: function () { if (d.pager) { const a = document.querySelectorAll(".docSliderTouch-inner > *").length; if (document.querySelector(".docSliderTouch-pager")) { const a = document.querySelectorAll(".docSliderTouch-button"); for (let b, c = 0; c < a.length; c++)b = a[c], b.setAttribute("data-ds-jump", c.toString()), b.setAttribute("tabindex", "-1") } else { const b = document.createElement("nav"); b.classList.add("docSliderTouch-pager"); for (let c, d = 0; d < a; d++)c = document.createElement("button"), c.classList.add("docSliderTouch-button"), c.setAttribute("data-ds-jump", d.toString()), c.setAttribute("tabindex", "-1"), b.appendChild(c); document.querySelector(".docSliderTouch").appendChild(b) } } }, setData: function () { c.controller = new docSliderTouch_Controller(d.lethargyOptions[0], d.lethargyOptions[1], null == d.lethargyOptions[2] ? null : d.lethargyOptions[2], null == d.lethargyOptions[3] ? null : d.lethargyOptions[1]), c.html = document.documentElement, c.wrapper = document.querySelector(".docSliderTouch"), c.pages = document.querySelectorAll(".docSliderTouch-inner > *"), c.pager = document.querySelector(".docSliderTouch-pager"), c.buttons = document.querySelectorAll(".docSliderTouch-pager .docSliderTouch-button"), c.length = c.pages.length, c.now = 0, c.past = 0, c.xy = d.horizontal ? "X" : "Y", c.yx = d.horizontal ? "Y" : "X", c.wheel = "onwheel" in document ? "wheel" : "onmousewheel" in document ? "mousewheel" : "DOMMouseScroll", c.wheelTick = !0, c.wheelEnable = !0, c.fromPoint = "elementsFromPoint" in document ? "elementsFromPoint" : "msElementsFromPoint", c.isTouch = "ontouchstart" in window, c.isMobile = /iPhone|Android.+Mobile/.test(navigator.userAgent), c.resizeTimer = 0, c.speed = null, c.easing = null, c.enable = !0, c.type = null, c.pastType = null, c.active = null, f.updatePager(), f.updateClass(), c.active = c.pages[c.now], c.pages[c.now].focus({ preventScroll: !1 }) }, setEvent: function () { for (let a = 0; a < c.length; a++) { const b = c.pages[a], d = c.buttons[a]; b.addEventListener("focusin", f.focusin), void 0 !== d && d.addEventListener("click", f.pagerClick) } document.addEventListener("keyup", f.keyup), document.addEventListener(c.wheel, f.wheel), c.pages[0].addEventListener("transitionstart", f.transitionstart), c.pages[0].addEventListener("transitionend", f.transitionend), c.isTouch && (c.touch = { move: !1, nextX: "right", prevX: "left", nextY: "bottom", prevY: "top", X: {}, Y: {} }, c.wrapper.addEventListener("touchstart", f.touchstart, !1), c.wrapper.addEventListener("touchmove", f.touchmove, !1), c.wrapper.addEventListener("touchend", f.touchend, !1)), c.isMobile && (f.setFV(), window.addEventListener("resize", f.resize)) }, hashJump: function () { const a = f.hashToIndex(location.hash); return a !== c.now && (c.speed = null === d.startSpeed ? d.speed : d.startSpeed, c.type = "anchor", c.speed ? setTimeout(function () { f.pageChange(a) }, 200) : f.pageChange(a), !0) } }, f = { hashToIndex: function (a) { return function () { if (a.length) { let b = document.querySelector(a); return b && b.hasAttribute("data-ds-index") ? +b.getAttribute("data-ds-index") : 0 } return 0 }() }, indexCheck: function (a) { return 0 <= a && a < c.length ? a : c.now }, pageChange: function (e) { if ("focus" !== c.type && c.pages[e].focus(), c.active = c.pages[e], e !== c.now) { c.type = c.type ? c.type : "focus", c.past = c.now, c.now = e; let g = null === c.speed ? d.speed : c.speed; const h = null === c.easing ? d.easing : c.easing; for (let a = 0; a < c.length; a++) { const b = c.pages[a], e = d.setChangeCss(a, c.now, g, h, d.horizontal); for (let a = 0; a < Object.keys(e).length; a++) { const c = Object.keys(e)[a]; b.style[c] = e[c] } } g || (d.scrollReset && f.scrollReset(c.pages[c.now]), b && f.animationReset(c.past), d.beforeChange(c.past, c.pages[c.past], c.now, c.pages[c.now], c.type), c.pastType = c.type, c.type = null, a && scrollCue._updateWithdocSliderTouch(), d.afterChange(c.now, c.pages[c.now], c.past, c.pages[c.past], c.pastType), c.pastType = null), c.speed = null, c.easing = null, f.updatePager(), f.updateClass() } }, focusin: function () { const a = +this.getAttribute("data-ds-index"); c.type = c.type ? c.type : "focus", f.pageChange(a) }, focusinx: function () { const e = +this.getAttribute("data-ds-index"); if (c.active = c.pages[e], e !== c.now) { c.type = c.type ? c.type : "focus", c.past = c.now, c.now = e; let g = null === c.speed ? d.speed : c.speed; const h = null === c.easing ? d.easing : c.easing; for (let a = 0; a < c.length; a++) { const b = c.pages[a], e = d.setChangeCss(a, c.now, g, h, d.horizontal); for (let a = 0; a < Object.keys(e).length; a++) { const c = Object.keys(e)[a]; b.style[c] = e[c] } } g || (d.scrollReset && f.scrollReset(c.pages[c.now]), b && f.animationReset(c.past), d.beforeChange(c.past, c.pages[c.past], c.now, c.pages[c.now], c.type), c.pastType = c.type, c.type = null, a && scrollCue._updateWithdocSliderTouch(), d.afterChange(c.now, c.pages[c.now], c.past, c.pages[c.past], c.pastType), c.pastType = null), c.speed = null, c.easing = null, f.updatePager(), f.updateClass() } }, pagerClick: function () { if (c.enable) { const a = +this.getAttribute("data-ds-jump"); c.type = "pager", f.pageChange(a) } }, updatePager: function () { for (let a = 0; a < c.length; a++) { const b = c.buttons[a]; void 0 !== b && b.classList.remove("selected") } void 0 === c.buttons[c.now] || c.buttons[c.now].classList.add("selected") }, updateClass: function () { const a = c.pages[c.past], b = a.getAttribute("data-ds-index"), d = !!a.hasAttribute("id") && a.getAttribute("id"), e = c.pages[c.now], f = e.getAttribute("data-ds-index"), g = !!e.hasAttribute("id") && e.getAttribute("id"); c.html.classList.remove("docSliderTouch-index_" + b), c.html.classList.remove("docSliderTouch-page_" + (+b + 1)), c.html.classList.remove("docSliderTouch-id_" + d), c.html.classList.add("docSliderTouch-index_" + f), c.html.classList.add("docSliderTouch-page_" + (+f + 1)), g && c.html.classList.add("docSliderTouch-id_" + g), c.pages[c.past].classList.remove("docSliderTouch-current"), c.pages[c.now].classList.add("docSliderTouch-current") }, keyup: function (a) { if (!c.enable) return; if (c.pages[c.now] !== document.activeElement) return; let b; const e = a.key, g = a.shiftKey, h = c.pages[c.now]; if ((g && / |Spacebar/.test(e) || !g && /ArrowUp|Up|PageUp/.test(e)) && f.scrollEnd(h, "top")) b = c.now - 1; else if (!g && / |Spacebar|ArrowDown|Down|PageDown/.test(e) && f.scrollEnd(h, "bottom")) b = c.now + 1; else if (!g && "Home" === e) b = 0; else if (!g && "End" === e) b = c.length - 1; else if (!g && d.horizontal && /ArrowLeft|Left/.test(e)) b = c.now - 1; else if (!g && d.horizontal && /ArrowRight|Right/.test(e)) b = c.now + 1; else return; f.indexCheck(b) === c.now || (c.type = "key", f.pageChange(b)) }, scrollEnd: function (a, b) { return "top" === b ? 0 >= Math.floor(a.scrollTop) : "bottom" === b ? Math.ceil(a.scrollTop) >= a.scrollHeight - a.clientHeight : "left" === b ? 0 >= Math.floor(a.scrollLeft) : "right" === b ? Math.ceil(a.scrollTop) >= a.scrollWidth - a.clientWidth : b }, wheel: function (a) { !1 !== c.controller.check(a) && c.wheelTick && (requestAnimationFrame(function () { if (c.wheelTick = !0, !c.enable) return; if (!c.wheelEnable) return; const b = a.deltaY ? -a.deltaY : a.wheelDelta ? a.wheelDelta : -a.detail, d = document[c.fromPoint](a.pageX, a.pageY), e = 0 < b ? "top" : "bottom", g = f.indexCheck("top" === e ? c.now - 1 : c.now + 1); if (c.active === c.pages[c.now] && g !== c.now) { for (let a = 0; a < d.length; a++) { const b = d[a]; if (b.classList.contains("docSliderTouch-scroll") && !f.scrollEnd(b, e)) return } c.type = "scroll", f.pageChange(g) } }), c.wheelTick = !1) }, transitionstart: function () { c.wheelEnable = !1, d.scrollReset && f.scrollReset(c.pages[c.now]), b && f.animationReset(c.past), d.beforeChange(c.past, c.pages[c.past], c.now, c.pages[c.now], c.type), c.pastType = c.type, c.type = null }, transitionend: function () { c.wheelEnable = !0, a && scrollCue._updateWithdocSliderTouch(), d.afterChange(c.now, c.pages[c.now], c.past, c.pages[c.past], c.pastType), c.pastType = null }, resize: function () { 0 < c.resizeTimer && clearTimeout(c.resizeTimer), c.resizeTimer = setTimeout(f.setFV, 200) }, setFV: function () { c.wrapper.style.height = window.innerHeight + "", c.wrapper.style.height = window.innerHeight + "px" }, touchstart: function (a) { !c.enable || 1 < a.touches.length || (c.touch.move = !1, c.touch.X.start = a.touches[0].pageX, c.touch.Y.start = a.touches[0].pageY) }, touchmove: function (a) { return c.enable ? 1 < a.touches.length ? void a.preventDefault() : void (c.touch.move = !0, c.touch.X.move = a.changedTouches[0].pageX, c.touch.Y.move = a.changedTouches[0].pageY) : void 0 }, touchend: function (a) { if (!c.enable) return; if (1 < a.touches.length) return; if (!c.touch.move) return; if (c.touch.X.distance = c.touch.X.move - c.touch.X.start, c.touch.Y.distance = c.touch.Y.move - c.touch.Y.start, Math.abs(c.touch[c.xy].distance) < Math.abs(c.touch[c.yx].distance)) return; const b = 0 > c.touch[c.xy].distance ? "next" : "prev", d = f.indexCheck("next" === b ? c.now + 1 : c.now - 1); if (d === c.now) return; if (0 === c.now && "prev" === b || c.now === c.length - 1 && "next" === b) return; const e = c.touch[b + c.xy], g = document[c.fromPoint](c.touch.X.start, c.touch.Y.start); for (let b = 0; b < g.length; b++) { const a = g[b]; if (a.classList.contains("docSliderTouch-scroll") && !f.scrollEnd(a, e)) return } c.type = "scroll", f.pageChange(d) }, scrollReset: function (a) { a.scrollTop = 0, a.scrollLeft = 0 }, animationReset: function (a) { let b = document.querySelectorAll("[data-scpage][data-show=\"true\"]"); if (!b.length) return !1; for (let c = 0; c < b.length; c++) { let d = b[c], e = d.getAttribute("data-addClass"); if (d.getAttribute("data-scpage") !== a + "" && (d.removeAttribute("style"), d.removeAttribute("data-show"), e)) { e = e.split(" "); for (let a, b = 0; b < e.length; b++)a = e[b], d.classList.remove(a) } } scrollCue._searchElements() } }; return { init: function (c) { let f; e.setOptions(c), e.createInner(), e.createPager(), e.setData(), e.setEvent(), f = e.hashJump(), a = "undefined" != typeof scrollCue && scrollCue._hasdocSliderTouch(), b = "undefined" != typeof scrollCue && scrollCue._hasPageChangeReset(), a && scrollCue._initWithdocSliderTouch(f), d.complete(d, docSliderTouch.getElements()) }, jumpPage: function (a, b, d) { let e; void 0 === a || (e = isNaN(a) ? f.hashToIndex("#" + a.replace("#", "")) : f.indexCheck(0 > a ? c.length + a : a), c.speed = b === void 0 ? null : b, c.easing = d === void 0 ? null : d, c.type = "jumpPage", f.pageChange(e)) }, nextPage: function (a, b) { const d = f.indexCheck(c.now + 1); c.speed = a === void 0 ? null : a, c.easing = b === void 0 ? null : b, c.type = "nextPage", f.pageChange(d) }, prevPage: function (a, b) { const d = f.indexCheck(c.now - 1); c.speed = a === void 0 ? null : a, c.easing = b === void 0 ? null : b, c.type = "prevPage", f.pageChange(d) }, getOptions: function () { return d }, getElements: function () { return { wrapper: c.wrapper, pages: c.pages, pager: c.pager, buttons: c.buttons } }, getCurrentIndex: function () { return c.now }, getCurrentPage: function () { return c.pages[c.now] }, enable: function (a) { c.enable = a === void 0 ? !c.enable : a; const b = c.enable ? "0" : "-1"; for (let d = 0; d < c.length; d++)c.pages[d].setAttribute("tabindex", b) }, _getWheelEnable: function () { return c.wheelEnable } } }();